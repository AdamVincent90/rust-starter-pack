// Remove when no longer required.
#![allow(dead_code)]

use crate::lib::logger::logger::Logger;
use sqlx::error::Error;
use sqlx::PgPool;

#[derive(Clone)]
pub struct {{upper name}}Store {
pub logger: Logger,
pub db: PgPool,
}

// This can be moved to a models.rs file.
pub struct {{upper name}} {}

// fn new_{{name}}_store() creates a new {{name}} store to perform database operations for the entity {{name}}s.
pub fn new_{{name}}_store(logger: Logger, db: PgPool) -> {{upper name}}Store {
{{upper name}}Store {
logger: logger,
db: db,
}
}

// We only allow these functions to be accesible on the {{upper name}}Store type.
// {{upper name}}Store can have other store related packages within to further flavour our logic.
impl {{upper name}}Store {

// ! To implement.
pub async fn query_{{name}}s(&self) -> Result<Vec<{{upper name}}>, Error> {
todo!()
}

// ! To implement.
pub async fn query_{{name}}_by_id(&self) -> Result<{{upper name}}, Error> {
todo!()
}

// ! To implement.
pub async fn create_{{name}}(&self) -> Result<(), Error> {
todo!()
}
}