// Remove when no longer required.
#![allow(dead_code, unused)]

use crate::domain::{system::error::error::SystemError, web::state::state::MuxState};
use crate::lib::logger::logger::Logger;
use sqlx::PgPool;
use super::stores::{{name}}_db::{{name}}_db;

#[derive(Clone)]
pub struct {{upper name}}Core {
{{name}}_store: {{name}}_db::{{upper name}}Store,
}

// fn new_{{name}}_core() constructs a new core to perform core business logic for {{name}}s.
pub fn new_{{name}}_core(logger: &Logger, db: &PgPool) -> {{upper name}}Core {
{{upper name}}Core {
{{name}}_store: {{name}}_db::new_{{name}}_store(logger.clone(), db.clone()),
}
}

// Implement the core logic for {{name}}s.
impl {{upper name}}Core {
    pub async fn example_{{name}}_function(&self,state: &MuxState) -> Result<(), SystemError> {
        // ! Implement me.
        Ok(())
        }
}