// Remove when no longer required.
#![allow(dead_code)]

use super::clients::{{name}}_client::{{name}}_client::{new_{{name}}_client, {{upper name}}Client};
use crate::dependency::logger::logger::Logger;

#[derive(Clone)]
pub struct {{upper name}}Core {
{{name}}_client: {{upper name}}Client,
}

// fn new_{{name}}_core() constructs a new core to perform core business logic for {{name}}s.
pub fn new_{{name}}_core(logger: &Logger) -> {{upper name}}Core {
{{upper name}}Core {
{{name}}_client: new_{{name}}_client(logger.clone()),
}
}

// Implement the core logic for {{name}}s.
impl {{upper name}}Core {}