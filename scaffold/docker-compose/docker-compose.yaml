version: "3.8"
services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - 5439:5432
  postgres-migrate:
    image: arigaio/atlas:0.8.1
    entrypoint: /app/wait4x
    command: [
      "postgresql", "postgres://postgres:example@postgres:5432/postgres?sslmode=disable", 
      "--", 
      "/atlas", "migrate", "apply", 
      "--dir", "file://migrations", 
      "--url", "postgres://postgres:example@postgres:5432/postgres?sslmode=disable",
      "--tx-mode", "all",
      "--allow-dirty"
    ]
    working_dir: /app
    volumes:
      - ./tools/wait4x:/app/wait4x
      - ../migrations:/app/migrations
  rust-web-api:
    build:
      context: ../../
      dockerfile: scaffold/docker/development.dockerfile
    command: sh -c 'cargo watch -x "run --bin rust-web-api"'
    environment:
      RUST_LOG: debug
      DB_HOST: '${DB_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_SCHEMA: '${DB_SCHEMA}'
    ports:
      - 8123:80
      - 8128:4080
    volumes:
      - ../../.:/rust-web-api
      - ../../stash/.cargo/registry:/usr/local/cargo/registry
      - ../../stash/.target:/root/target